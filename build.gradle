plugins {
    id 'java-library'
    id 'checkstyle'
    id 'idea'
    id 'jacoco'
    id 'pmd'
    id 'com.github.spotbugs' version "3.0.0"
    id 'net.saliman.cobertura' version '3.0.0'
    id "org.sonarqube" version "2.8"
}

description = 'Webhooks4j'
group = 'dk.jensborch'
version = '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compileOnly group:'org.projectlombok', name: 'lombok', version :'1.18.10'
    annotationProcessor group:'org.projectlombok', name: 'lombok', version: '1.18.10'    
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
    implementation group: 'javax.enterprise', name: 'cdi-api', version: '1.2'    
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.23.0'
    testImplementation group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.30'
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("$buildDir/reports/jacoco/test/html")
    }
}

pmd {
    ruleSets = []
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

task travisWrapper(type: Wrapper) {
    gradleVersion = 6.0
}
